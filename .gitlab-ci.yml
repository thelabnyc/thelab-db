stages:
  - test
  - docs
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
  PYIMAGE: py313

.rules_mrs_and_protected:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.rules_only_mrs:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.rules_only_master:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"

.rules_only_protected_tags:
  - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"

.needs_all_tests:
  - test:sqlite
  - test:postgres

.script_build_docs:
  - make docs

.base_job: &base_job
  image: "registry.gitlab.com/thelabnyc/python:${PYIMAGE}"

.dev_dependency_job: &dev_dependency_job
  <<: *base_job
  before_script:
    # Install dependencies
    - uv sync
  cache:
    key: devdependencies-${PYIMAGE}
    paths:
      - .cache/pip/
      - .cache/uv/
      - .venv/

include:
  - component: gitlab.com/thelabnyc/thelab-ci-components/precommit@0.4.0
    rules:
      - if: $CI_PIPELINE_SOURCE == "schedule"
        when: never
      - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
      - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  - component: gitlab.com/thelabnyc/thelab-ci-components/publish-gitlab-release@0.4.0
  - component: gitlab.com/thelabnyc/thelab-ci-components/publish-to-pypi@0.4.0
    inputs:
      image: "registry.gitlab.com/thelabnyc/python:${PYIMAGE}"

test:sqlite: &test_sqlite
  <<: *dev_dependency_job
  rules:
    - !reference [.rules_mrs_and_protected]
  stage: test
  needs: []
  variables:
    DJANGO_SETTINGS_MODULE: thelabdb.tests.settings.sqlite
    TEST_PKGS: thelabdb.tests.testsuniv
  parallel:
    matrix:
      - PYIMAGE: py313
        TOX_SKIP_ENV: "^(?!py313-)"
  script:
    - uv run tox

test:postgres:
  <<: *test_sqlite
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: "trust"
    DJANGO_SETTINGS_MODULE: thelabdb.tests.settings.pg
    TEST_PKGS: thelabdb.tests.testsuniv thelabdb.tests.testspg
  services:
    - postgres:latest@sha256:29e0bb09c8e7e7fc265ea9f4367de9622e55bae6b0b97e7cce740c2d63c2ebc0
  # Only get coverage from postgres job since the sqlite job skips the postgres
  # test, which makes coverage seem lower than it actually is.
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test:docs:
  <<: *dev_dependency_job
  rules:
    - !reference [.rules_only_mrs]
  stage: test
  needs: []
  script:
    - !reference [.script_build_docs]

pages:
  <<: *dev_dependency_job
  rules:
    - !reference [.rules_only_master]
  stage: docs
  needs:
    - !reference [.needs_all_tests]
  script:
    - !reference [.script_build_docs]
  artifacts:
    paths:
      - public
